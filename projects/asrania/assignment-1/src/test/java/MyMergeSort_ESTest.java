/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 17 20:10:53 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
//import static org.evosuite.runtime.EvoAssertions.*;
import edu.osu.cs362.MyMergeSort;
//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MyMergeSort_ESTest extends MyMergeSort_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MyMergeSort myMergeSort0 = new MyMergeSort();
      int[] intArray0 = new int[6];
      intArray0[0] = 2053;
      myMergeSort0.sort(intArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MyMergeSort myMergeSort0 = new MyMergeSort();
      int[] intArray0 = new int[0];
      myMergeSort0.sort(intArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MyMergeSort myMergeSort0 = new MyMergeSort();
      // Undeclared exception!
      try { 
        myMergeSort0.sort((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
 //        assertThrownBy("edu.osu.cs362.MyMergeSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MyMergeSort myMergeSort0 = new MyMergeSort();
      int[] intArray0 = new int[3];
      myMergeSort0.sort(intArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MyMergeSort.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MyMergeSort myMergeSort0 = new MyMergeSort();
      int[] intArray0 = new int[4];
      myMergeSort0.sort(intArray0);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }
}
